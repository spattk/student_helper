{"version":3,"sources":["img/12226.jpeg","const.js","components/Footer.js","components/MenuHeader.js","components/VerticalNavigation.js","components/Login.js","components/Project.js","components/RecentProjects.js","components/Dashboard.js","components/StoryCard.js","components/Kanban.js","components/Student.js","components/Professors.js","components/Projects.js","components/Students.js","components/User.js","components/Users.js","components/Views.js","App.js","useToken.js","index.js"],"names":["module","exports","BASE_URL","Footer","style","textAlign","position","bottom","fontWeight","width","padding","backgroundColor","color","MenuHeader","props","authCheck","a","currToken","localStorage","getItem","fetch","headers","response","json","res","console","log","Segment","Menu","border","Item","name","onClick","Input","icon","placeholder","token","setToken","auth","removeItem","MenuExampleVerticalPointing","state","activeItem","handleItemClick","e","setState","this","Container","pointing","vertical","to","active","fontSize","Component","loginUser","credentials","method","body","JSON","stringify","then","data","Login","useState","username","setUserName","password","setPassword","errorText","setErrorText","successText","setSuccessText","isLogInSuccess","handleSubmit","preventDefault","setItem","handleRegister","requestOptions","formState","formUsername","formPassword","email","formEmail","first_name","formFName","last_name","formLName","phone","formPhone","role","formRole","department","formDepartment","undefined","user_id","setFormState","handleChange","target","value","fluid","Grid","Row","Column","marginTop","marginLeft","marginRight","borderRadius","Form","margin","Field","onChange","type","Button","float","paddingBottom","formName","Project","Image","size","src","Content","Header","as","Meta","Description","description","Extra","project_id","RecentProjects","recentProjects","setRecentProjects","getRecentProjects","jsonData","useEffect","React","open","setOpen","formId","formDesc","formGitURL","formVideoURL","formFundingURL","formStatus","formDomain","formProfID","Modal","closeIcon","trigger","paddingTop","onClose","onOpen","content","scrolling","Actions","Accept","project_name","project_description","github_url","video_url","funding_url","project_status","domain","professor_id","Icon","marginBottom","Group","map","recentProject","key","Dashboard","backgroundImage","background","StoryCard","statusType","all_dev_len","Status","all_developers","dev","Devs","Dev","Card","card_style","text_style","developer_name","right","story_id","story_points","extra","bg_color","text_color","id","storyJsonData","updatedDeveloperId","storyId","updatedDevName","result","developer_id","result2","update_story_handler","handleDevNameChange","parentElement","updatedStoryStatus","story_name","story_description","status","handleStatusTypeChange","Kanban","styles","useParams","project","setProject","setProjectStories","todoStories","setTodoStories","devStories","setDevStories","reviewStories","setReviewStories","releasedStories","setReleasedStories","allDevelopers","setAllDevelopers","getProjectDetails","projectResponse","projectJsonData","allDevelopersArray","allDevelopersResponse","allDevelopersResponseJson","push","i","length","projectStoriesResponse","temp","filter","story","formPoints","formDeveloper","index","developer","Student","maxWidth","textTransform","designation","Professors","allProfs","setAllProfs","getAllProfs","formAuthToken","student","Projects","Students","allStudents","setAllStudents","getAllStudents","User","Users","allUsers","setAllUsers","Views","path","element","App","tokenString","sessionStorage","userToken","parse","getToken","useToken","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93844e01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/12226.1ac18aa4.jpeg\";","export const BASE_URL = 'http://localhost:5001'","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        position: \"fixed\",\n        bottom: \"0\",\n        fontWeight: \"bold\",\n        width: \"98%\",\n        padding: \"10px\",\n        backgroundColor: \"#193D62\",\n        color: \"white\",\n      }}\n    >\n      Student Helper, Inc | University of California, Irvine\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Input, Menu, Segment } from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\n\nconst MenuHeader = (props) => {\n  const handleLogout = () => {\n    let token = { auth: false };\n    props.setToken(token);\n    localStorage.removeItem(\"authToken\");\n  };\n\n  const authCheck = async () => {\n    let currToken = localStorage.getItem(\"authToken\");\n    // console.log(\"^^^^\" + currToken);\n    const response = await fetch(`${BASE_URL}/isUserAuth`, {\n      headers: {\n        \"x-access-token\": currToken,\n      },\n    });\n    const res = await response.json();\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Segment style={{ backgroundColor: \"#193D62\" }}>\n        <Menu style={{ backgroundColor: \"#193D62\", border: \"1px solid white\" }}>\n          <Menu.Item\n            name=\"student helper\"\n            style={{ color: \"white\", fontWeight: \"bold\" }}\n          />\n          <Menu.Item\n            name=\"home\"\n            style={{ color: \"white\", fontWeight: \"bold\" }}\n          />\n          <Menu.Item\n            name=\"test auth\"\n            style={{ color: \"white\", fontWeight: \"bold\" }}\n            onClick={authCheck}\n          />\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n              <Input icon=\"search\" placeholder=\"Search...\" />\n            </Menu.Item>\n            {props.token ? (\n              <Menu.Item\n                name=\"session logout\"\n                onClick={handleLogout}\n                style={{ color: \"white\", fontWeight: \"bold\" }}\n              />\n            ) : (\n              <div></div>\n            )}\n          </Menu.Menu>\n        </Menu>\n      </Segment>\n    </div>\n  );\n};\n\nexport default MenuHeader;\n","import React, { Component } from \"react\";\nimport { Menu, Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class MenuExampleVerticalPointing extends Component {\n  state = { activeItem: \"home\" };\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  };\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Container >\n        <Menu pointing vertical style={{backgroundColor:'#F07C41', border: \"0.5px solid #193D62\"}}>\n          <Link to=\"/dashboard\">\n            <Menu.Item\n              name=\"dashboard\"\n              active={activeItem === \"dashboard\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", fontSize:'15px', border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n\n          <Link to=\"/projects\">\n            <Menu.Item\n              name=\"projects\"\n              active={activeItem === \"projects\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n\n          <Link to=\"/groups\">\n            <Menu.Item\n              name=\"groups\"\n              active={activeItem === \"groups\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n\n          <Link to=\"/students\">\n            <Menu.Item\n              name=\"students\"\n              active={activeItem === \"students\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n          \n          <Link to=\"/professors\">\n            <Menu.Item\n              name=\"professors\"\n              active={activeItem === \"professors\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n\n          <Link to=\"/users\">\n            <Menu.Item\n              name=\"users\"\n              active={activeItem === \"users\"}\n              onClick={this.handleItemClick}\n              style={{color:\"white\", fontWeight:\"bold\", border: \"0.5px solid #193D62\"}}\n            />\n          </Link>\n\n        </Menu>\n      </Container>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, Container, Form, Grid } from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\nimport \"../css/Login.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nasync function loginUser(credentials) {\n  return await fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  })\n    .then((data) => data.json())\n    .then((res) => res);\n}\n\nconst Login = (props) => {\n  // LOGIN\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [errorText, setErrorText] = useState();\n  const [successText, setSuccessText] = useState();\n\n  let isLogInSuccess = true;\n  let isRegisterSuccess = true;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password,\n    });\n    console.log(\"login page\");\n    console.log(token);\n    if (!token.auth) {\n      isLogInSuccess = false;\n      setErrorText(\"Invalid Username or Password !!!\");\n    } else {\n      setErrorText(errorText);\n      isLogInSuccess = true;\n      localStorage.setItem(\"authToken\", token.token);\n    }\n    props.setToken(token);\n  };\n\n  // REGISTER\n\n  const handleRegister = async (e) => {\n    console.log(\"register clicked\");\n    e.preventDefault();\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: formState.formUsername,\n        password: formState.formPassword,\n        email: formState.formEmail,\n        first_name: formState.formFName,\n        last_name: formState.formLName,\n        phone: formState.formPhone,\n        role: formState.formRole,\n        department: formState.formDepartment,\n      }),\n    };\n\n    const response = await fetch(\"http://localhost:5001/users\", requestOptions);\n    const data = await response.json();\n    if (data != undefined && data.user_id != undefined && data.user_id > 0) {\n      setSuccessText(\"Registered Successfully !!!\");\n      setFormState({\n        formUsername: \"\",\n        formPassword: \"\",\n        formEmail: \"\",\n        formFName: \"\",\n        formLName: \"\",\n        formPhone: \"\",\n        formRole: \"\",\n        formDepartment: \"\",\n      });\n    } else {\n      setSuccessText(\"Registration Failed!!\");\n    }\n  };\n\n  const [formState, setFormState] = useState({\n    formUsername: \"\",\n    formPassword: \"\",\n    formEmail: \"\",\n    formFName: \"\",\n    formLName: \"\",\n    formPhone: \"\",\n    formRole: \"\",\n    formDepartment: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container fluid={true}>\n      <div>\n        <MenuHeader setToken={props.setToken} />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <VerticalNavigation />\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <h2\n                style={{\n                  marginTop: \"10px\",\n                  textAlign: \"center\",\n                  border: \"1px solid black\",\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {\" \"}\n                Login\n              </h2>\n              <Form\n                style={{\n                  padding: \"20px\",\n                  border: \"1px solid #193D62\",\n                  margin: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Form.Field>\n                  <label>Username</label>\n                  <input\n                    placeholder=\"Username\"\n                    onChange={(e) => setUserName(e.target.value)}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Password</label>\n                  <input\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    type=\"password\"\n                  />\n                </Form.Field>\n                <Button\n                  type=\"submit\"\n                  style={{ backgroundColor: \"#193D62\", color: \"white\" }}\n                  onClick={handleSubmit}\n                >\n                  Login\n                </Button>\n\n                {isLogInSuccess ? (\n                  <Form.Field style={{ float: \"right\", padding: \"8px\" }}>\n                    <label style={{ color: \"red\" }}>{errorText}</label>\n                  </Form.Field>\n                ) : (\n                  <div></div>\n                )}\n              </Form>\n            </Grid.Column>\n            <Grid.Column width={1}></Grid.Column>\n            <Grid.Column width={6} style={{ paddingBottom: \"40px\" }}>\n              <h2\n                style={{\n                  marginTop: \"10px\",\n                  textAlign: \"center\",\n                  border: \"1px solid black\",\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {\" \"}\n                Register User\n              </h2>\n              <Form\n                style={{\n                  padding: \"20px\",\n                  border: \"1px solid #193D62\",\n                  margin: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Form.Field>\n                  <label>First Name</label>\n                  <input\n                    name=\"formFName\"\n                    placeholder=\"First Name\"\n                    value={formState.formFName}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Last Name</label>\n                  <input\n                    name=\"formLName\"\n                    placeholder=\"Last Name\"\n                    value={formState.formLName}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Username</label>\n                  <input\n                    name=\"formUsername\"\n                    placeholder=\"Username\"\n                    value={formState.formName}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Password</label>\n                  <input\n                    name=\"formPassword\"\n                    placeholder=\"Password\"\n                    value={formState.formName}\n                    onChange={handleChange}\n                    type=\"password\"\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Email</label>\n                  <input\n                    name=\"formEmail\"\n                    placeholder=\"Email\"\n                    value={formState.formEmail}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Phone</label>\n                  <input\n                    name=\"formPhone\"\n                    placeholder=\"Phone\"\n                    value={formState.formPhone}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Role</label>\n                  <input\n                    name=\"formRole\"\n                    placeholder=\"Role\"\n                    value={formState.formRole}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Department</label>\n                  <input\n                    name=\"formDepartment\"\n                    placeholder=\"Department\"\n                    value={formState.formDepartment}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n                <Button\n                  type=\"submit\"\n                  style={{ backgroundColor: \"#193D62\", color: \"white\" }}\n                  onClick={handleRegister}\n                >\n                  Register\n                </Button>\n                {isRegisterSuccess ? (\n                  <Form.Field style={{ float: \"right\", padding: \"8px\" }}>\n                    <label style={{ color: \"green\" }}>{successText}</label>\n                  </Form.Field>\n                ) : (\n                  <div></div>\n                )}\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n      <Footer></Footer>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Item } from \"semantic-ui-react\";\n\nconst Project = (props) => {\n  return (\n    <Item style={{ border: \"1px solid #193D62\", borderRadius: '12px', padding: \"10px\", color:\"#193D62\" }}>\n      <Item.Image\n        size=\"tiny\"\n        src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n      />\n\n      <Item.Content style={{color:\"#193D62\"}}>\n        <Item.Header as=\"a\">{props.name}</Item.Header>\n        <Item.Meta>Project Metadata</Item.Meta>\n        <Item.Description>{props.description}</Item.Description>\n\n        <Item.Extra>\n          <Link to={`/kanban/${props.project_id}`}>\n            <Button style={{backgroundColor:\"#193D62\", color:\"white\"}} >Kanban Board</Button>\n          </Link>\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default Project;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Header, Icon, Item, Modal } from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport Project from \"./Project\";\n\nconst RecentProjects = (props) => {\n  const [recentProjects, setRecentProjects] = useState([]);\n\n  const getRecentProjects = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/projects`);\n      const jsonData = await response.json();\n      setRecentProjects(jsonData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getRecentProjects();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [formState, setFormState] = useState({\n    formId: \"\",\n    formName: \"\",\n    formDesc: \"\",\n    formGitURL: \"\",\n    formVideoURL: \"\",\n    formFundingURL: \"\",\n    formStatus: \"\",\n    formDomain: \"\",\n    formProfID: \"\",\n  });\n  const submit = () => {\n    fetch(\"http://localhost:5001/projects\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        project_id: formState.formId,\n        project_name: formState.formName,\n        project_description: formState.formDesc,\n        github_url: formState.formGitURL,\n        video_url: formState.formVideoURL,\n        funding_url: formState.formFundingURL,\n        project_status: formState.formStatus,\n        domain: formState.formDomain,\n        professor_id: formState.formProfID,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        getRecentProjects();\n      });\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#F3F4F5\" }}>\n      <Modal\n        closeIcon\n        open={open}\n        trigger={\n          <Button\n            style={{\n              float: \"right\",\n              margin: \"10px\",\n              marginRight: \"20px\",\n              paddingTop: \"10px\",\n              backgroundColor: \"#193D62\",\n              color: \"white\",\n            }}\n          >\n            Add Project\n          </Button>\n        }\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Header content=\"Add New Project\" />\n        <Modal.Content scrolling>\n          <Form>\n            <Form.Field>\n              <label>ID</label>\n              <input\n                name=\"formId\"\n                placeholder=\"ID\"\n                value={formState.formId}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                name=\"formName\"\n                placeholder=\"Name\"\n                value={formState.formName}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Description</label>\n              <input\n                name=\"formDesc\"\n                placeholder=\"Description\"\n                value={formState.formDesc}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Github URL</label>\n              <input\n                name=\"formGitURL\"\n                placeholder=\"Github URL\"\n                value={formState.formGitURL}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Video URL</label>\n              <input\n                name=\"formVideoURL\"\n                placeholder=\"Video URL\"\n                value={formState.formVideoURL}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Funding URL</label>\n              <input\n                name=\"formFundingURL\"\n                placeholder=\"Funding URL\"\n                value={formState.formFundingURL}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Status</label>\n              <input\n                name=\"formStatus\"\n                placeholder=\"Status\"\n                value={formState.formStatus}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Domain</label>\n              <input\n                name=\"formDomain\"\n                placeholder=\"Domain\"\n                value={formState.formDomain}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Professor ID</label>\n              <input\n                name=\"formProfID\"\n                placeholder=\"Professor ID\"\n                value={formState.formProfID}\n                onChange={handleChange}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" onClick={submit}>\n            <Icon name=\"checkmark\" /> Submit\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <div\n        style={{\n          textAlign: \"center\",\n          padding: \"10px\",\n          marginTop: \"10px\",\n          textAlign: \"center\",\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n          border: \"1px solid black\",\n          padding: \"10px\",\n          borderRadius: \"10px\",\n        }}\n      >\n        <h2>All Projects</h2>\n      </div>\n      <div style={{ margin: \"10px\", marginBottom: \"70px\" }}>\n        <Item.Group>\n          {recentProjects.map((recentProject) => (\n            <Project\n              key={recentProject.project_id}\n              name={recentProject.project_name}\n              description={recentProject.project_description}\n              project_id={recentProject.project_id}\n            />\n          ))}\n        </Item.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default RecentProjects;\n","import React from \"react\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport \"../css/App.css\";\nimport background from \"../img/12226.jpeg\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport RecentProjects from \"./RecentProjects\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nfunction Dashboard(props) {\n  return (\n    <Container fluid={true}>\n      <div style={{ backgroundImage: `url(${background})` }}>\n        <MenuHeader token={props.token} setToken={props.setToken} />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <VerticalNavigation />\n            </Grid.Column>\n            <Grid.Column width={13}>\n              <RecentProjects />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n      <Footer></Footer>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport { Card, Icon } from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\n\nconst StoryCard = (props) => {\n  const [statusType, setStatusType] = useState([\n    \"<status>\",\n    \"TODO\",\n    \"IN_PROGRESS\",\n    \"IN_REVIEW\",\n    \"COMPLETED\",\n  ]);\n  const [devLen, setDevLen] = useState(props.all_dev_len);\n  const Status = statusType.map((Status) => Status);\n  const handleStatusTypeChange = (e) => {\n    let storyId = e.target.parentElement.id;\n    let storyJsonData;\n    let updatedStoryStatus = statusType[e.target.value];\n\n    fetch(`${BASE_URL}/stories/${storyId}`).then((response) =>\n      response.json().then((result) => {\n        storyJsonData = result;\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            story_name: storyJsonData.story_name,\n            story_description: storyJsonData.story_description,\n            story_points: storyJsonData.story_points,\n            status: updatedStoryStatus,\n          }),\n        };\n        fetch(`http://localhost:5001/stories/${storyId}`, requestOptions).then(\n          (response) =>\n            response.json().then((result) => {\n              console.log(result);\n              props.update_story_handler();\n            })\n        );\n      })\n    );\n  };\n\n  const [dev, setDev] = useState(props.all_developers);\n  const Devs = dev.map((Dev) => Dev);\n  const handleDevNameChange = (e) => {\n    let storyId = e.target.id;\n    let developerJsonData, storyJsonData, updatedDeveloperId;\n    let updatedDevName = dev[e.target.value];\n    console.log(\"storyId in \" + storyId + \" \" + updatedDevName);\n\n    fetch(`http://localhost:5001/developer/${updatedDevName}`).then(\n      (response) =>\n        response.json().then((result) => {\n          developerJsonData = result;\n          updatedDeveloperId = developerJsonData.developer_id;\n\n          fetch(`http://localhost:5001/stories/${storyId}`).then((response) =>\n            response.json().then((result2) => {\n              storyJsonData = result2;\n              console.log(storyJsonData);\n              const requestOptions = {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  developer_id: updatedDeveloperId,\n                  project_id: storyJsonData.project_id,\n                }),\n              };\n              console.log(\"updating dev \" + storyId);\n              console.log(requestOptions);\n              fetch(\n                `http://localhost:5001/stories/${storyId}/developer`,\n                requestOptions\n              ).then((response) =>\n                response.json().then((result) => {\n                  console.log(result);\n                  props.update_story_handler();\n                })\n              );\n            })\n          );\n        })\n    );\n  };\n\n  return (\n    <Card style={props.card_style}>\n      <Card.Content style={props.text_style}>\n        <Card.Description content={props.content} style={props.text_style} />\n        <br />\n        <Icon name=\"user\" />\n\n        {props.developer_name}\n\n        <a\n          style={\n            (props.text_style,\n            {\n              position: \"absolute\",\n              right: \"55px\",\n              color: \"white\",\n              border: \"1px dashed black\",\n              padding: \"3px\",\n              borderRadius: \"5px\",\n            })\n          }\n        >\n          KB-{props.story_id}\n        </a>\n\n        <a\n          style={\n            (props.text_style,\n            {\n              position: \"absolute\",\n              right: \"10px\",\n              color: \"white\",\n              border: \"1px dashed black\",\n              padding: \"3px\",\n              borderRadius: \"5px\",\n            })\n          }\n        >\n          <Icon name=\"clock outline\" />\n          {props.story_points}\n        </a>\n      </Card.Content>\n\n      <Card.Content extra>\n        <a style={props.text_style}>\n          <select\n            style={{\n              width: \"45%\",\n              fontSize: \"12px\",\n              padding: \"7px\",\n              backgroundColor: props.bg_color,\n              color: props.text_color,\n            }}\n            id={props.story_id}\n            onChange={(e) => handleDevNameChange(e)}\n          >\n            {Devs.map((dev, key) => (\n              <option key={key} value={key}>\n                {dev}\n              </option>\n            ))}\n          </select>\n        </a>\n\n        <div\n          style={{ width: \"50%\", float: \"right\", fontSize: \"13px\" }}\n          id={props.story_id}\n        >\n          <select\n            onChange={(e) => handleStatusTypeChange(e)}\n            style={{\n              width: \"100%\",\n              fontSize: \"12px\",\n              padding: \"7px\",\n              backgroundColor: props.bg_color,\n              color: props.text_color,\n            }}\n          >\n            {Status.map((status, key) => (\n              <option key={key} value={key}>\n                {status}\n              </option>\n            ))}\n          </select>\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default StoryCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Modal,\n  Form,\n} from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport StoryCard from \"./StoryCard\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nconst Kanban = (props) => {\n  const styles = [\n    {\n      backgroundColor: \"#f8ad9d\",\n    },\n    {\n      backgroundColor: \"#f6bd60\",\n    },\n    {\n      backgroundColor: \"#2ec4b6\",\n    },\n    {\n      backgroundColor: \"#0077b6\",\n    },\n  ];\n\n  let { id } = useParams();\n  const [project, setProject] = useState([]);\n  const [projectStories, setProjectStories] = useState([]);\n  const [todoStories, setTodoStories] = useState([]);\n  const [devStories, setDevStories] = useState([]);\n  const [reviewStories, setReviewStories] = useState([]);\n  const [releasedStories, setReleasedStories] = useState([]);\n  const [allDevelopers, setAllDevelopers] = useState([]);\n\n  const getProjectDetails = async () => {\n    try {\n      const projectResponse = await fetch(\n        `${BASE_URL}/projects/${id}`\n      );\n      const projectJsonData = await projectResponse.json();\n      setProject(projectJsonData);\n      let allDevelopersArray = [];\n      const allDevelopersResponse = await fetch(\n        `${BASE_URL}/projects/${id}/developers`\n      );\n      const allDevelopersResponseJson = await allDevelopersResponse.json();\n      allDevelopersArray.push(\"update-dev\");\n      for (let i = 0; i < allDevelopersResponseJson.length; i++) {\n        allDevelopersArray.push(allDevelopersResponseJson[i].developer_name);\n      }\n      setAllDevelopers(allDevelopersArray);\n\n      const projectStoriesResponse = await fetch(\n        `${BASE_URL}/projects/${id}/stories`\n      );\n      const storyJsonData = await projectStoriesResponse.json();\n      setProjectStories(storyJsonData);\n      let temp = [];\n      setProjectStories((state) => {\n        temp = state.filter((story) => story.status === \"TODO\");\n        setTodoStories(temp);\n\n        temp = state.filter((story) => story.status === \"IN_PROGRESS\");\n        setDevStories(temp);\n\n        temp = state.filter((story) => story.status === \"IN_REVIEW\");\n        setReviewStories(temp);\n\n        temp = state.filter((story) => story.status === \"COMPLETED\");\n        setReleasedStories(temp);\n\n        return state;\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getProjectDetails();\n  }, [id]);\n\n  const [open, setOpen] = React.useState(false);\n  const [formState, setFormState] = useState({\n    formName: \"\",\n    formDesc: \"\",\n    formPoints: \"\",\n    formStatus: \"\",\n    formDeveloper: \"\",\n  });\n  const submit = () => {\n    fetch(`${BASE_URL}/stories`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        story_name: formState.formName,\n        story_description: formState.formDesc,\n        story_points: formState.formPoints,\n        status: formState.formStatus,\n        project_id: id,\n        developer_id: formState.formDeveloper,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        getProjectDetails();\n        setFormState({\n          formName: \"\",\n          formDesc: \"\",\n          formPoints: \"\",\n          formStatus: \"\",\n          formDeveloper: \"\",\n        });\n      });\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container fluid={true}>\n      <MenuHeader token={props.token} setToken={props.setToken}  />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <VerticalNavigation />\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <h2\n              style={{\n                marginTop: \"10px\",\n                textAlign: \"center\",\n                border: \"1px solid black\",\n                marginLeft: \"-20px\",\n                marginRight: \"10px\",\n                padding: \"10px\",\n                borderRadius: \"10px\",\n              }}\n            >\n              {project.project_name} Kanban Board\n              <Modal\n                closeIcon\n                open={open}\n                trigger={\n                  <Button\n                    style={{\n                      float: \"right\",\n                      backgroundColor: \"#193D62\",\n                      color: \"white\",\n                    }}\n                  >\n                    Add Story\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header content=\"Add New Story\" />\n                <Modal.Content scrolling>\n                  <Form>\n                    <Form.Field>\n                      <label>Name</label>\n                      <input\n                        name=\"formName\"\n                        placeholder=\"Name\"\n                        value={formState.formName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Description</label>\n                      <input\n                        name=\"formDesc\"\n                        placeholder=\"Description\"\n                        value={formState.formDesc}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Points</label>\n                      <input\n                        name=\"formPoints\"\n                        placeholder=\"Points\"\n                        value={formState.formPoints}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Status</label>\n                      <input\n                        name=\"formStatus\"\n                        placeholder=\"Status\"\n                        value={formState.formStatus}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Developer ID</label>\n                      <input\n                        name=\"formDeveloper\"\n                        placeholder=\"Developer ID\"\n                        value={formState.formDeveloper}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button color=\"green\" onClick={submit}>\n                    <Icon name=\"checkmark\" /> Submit\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </h2>\n\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={4}>\n                  <h4 style={{ textAlign: \"center\" }}>TODO</h4>\n                  <Card.Group\n                    style={{ border: \"1px solid grey\", borderRadius: \"10px\" }}\n                  >\n                    {todoStories.map((story, index) => (\n                      <StoryCard\n                        key={story.story_id}\n                        content={story.story_description}\n                        card_style={styles[0]}\n                        developer_name={story.developer}\n                        story_points={story.story_points}\n                        story_id={story.story_id}\n                        update_story_handler={getProjectDetails}\n                        bg_color={styles[0].backgroundColor}\n                        text_color=\"black\"\n                        all_developers={allDevelopers}\n                      />\n                    ))}\n                    {/* <StoryCard\n                      content=\"Add auto-generated IDs to DB in the insert APIs\"\n                      card_style={styles[0]}\n                    /> */}\n\n                    {/* <StoryCard\n                      content=\"Kanban board story create API\"\n                      card_style={styles[0]}\n                    />\n\n                    <StoryCard\n                      content=\"/project/:p_id/stories API\"\n                      card_style={styles[0]}\n                    />\n\n                    <StoryCard\n                      content=\"Swagger Documentation API integration\"\n                      card_style={styles[0]}\n                    />\n\n                    <StoryCard\n                      content=\"Github latest commit fetch API\"\n                      card_style={styles[0]}\n                    /> */}\n                  </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                  <h4 style={{ textAlign: \"center\" }}>IN_PROGRESS</h4>\n                  <Card.Group\n                    style={{ border: \"1px solid grey\", borderRadius: \"10px\" }}\n                  >\n                    {devStories.map((story, index) => (\n                      <StoryCard\n                        key={story.story_id}\n                        content={story.story_description}\n                        card_style={styles[1]}\n                        developer_name={story.developer}\n                        story_points={story.story_points}\n                        story_id={story.story_id}\n                        update_story_handler={getProjectDetails}\n                        bg_color={styles[1].backgroundColor}\n                        text_color=\"black\"\n                        all_developers={allDevelopers}\n                      />\n                    ))}\n\n                    {/* <StoryCard\n                      content=\"Integration of project ID with the Kanban Board\"\n                      card_style={styles[1]}\n                    />\n\n                    <StoryCard\n                      content=\"Login and Authentication flow with setting up of session\"\n                      card_style={styles[1]}\n                    />\n\n                    <StoryCard\n                      content=\"Hyperlink and control flow within the text.\"\n                      card_style={styles[1]}\n                    /> */}\n                  </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                  <h4 style={{ textAlign: \"center\" }}>IN_REVIEW</h4>\n                  <Card.Group\n                    style={{ border: \"1px solid grey\", borderRadius: \"10px\" }}\n                  >\n                    {reviewStories.map((story, index) => (\n                      <StoryCard\n                        key={story.story_id}\n                        content={story.story_description}\n                        card_style={styles[2]}\n                        text_style={{ color: \"white\" }}\n                        developer_name={story.developer}\n                        story_points={story.story_points}\n                        story_id={story.story_id}\n                        update_story_handler={getProjectDetails}\n                        bg_color={styles[2].backgroundColor}\n                        text_color=\"white\"\n                        all_developers={allDevelopers}\n                      />\n                    ))}\n\n                    {/* <StoryCard\n                      content=\"Kanban board UI including Dev, StoryID, Story Points\"\n                      card_style={styles[2]}\n                      text_style={{ color: \"white\" }}\n                    />\n\n                    <StoryCard\n                      content=\"Create stories API\"\n                      card_style={styles[2]}\n                      text_style={{ color: \"white\" }}\n                    />\n\n                    <StoryCard\n                      content=\"Update story status API (TODO -> DEV)\"\n                      card_style={styles[2]}\n                      text_style={{ color: \"white\" }}\n                    /> */}\n                  </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                  <h4 style={{ textAlign: \"center\" }}>COMPLETED</h4>\n                  <Card.Group\n                    style={{ border: \"1px solid grey\", borderRadius: \"10px\" }}\n                  >\n                    {releasedStories.map((story, index) => (\n                      <StoryCard\n                        key={story.story_id}\n                        content={story.story_description}\n                        card_style={styles[3]}\n                        text_style={{ color: \"white\" }}\n                        developer_name={story.developer}\n                        story_points={story.story_points}\n                        story_id={story.story_id}\n                        update_story_handler={getProjectDetails}\n                        bg_color={styles[3].backgroundColor}\n                        text_color=\"white\"\n                        all_developers={allDevelopers}\n                      />\n                    ))}\n\n                    {/* <StoryCard\n                      content=\"Client Side Routing\"\n                      card_style={styles[3]}\n                      text_style={{ color: \"white\" }}\n                    />\n\n                    <StoryCard\n                      content=\"Kanban board base UI\"\n                      card_style={styles[3]}\n                      text_style={{ color: \"white\" }}\n                    />\n\n                    <StoryCard\n                      content=\"GET APIs with Postman v2.1 Collections\"\n                      card_style={styles[3]}\n                      text_style={{ color: \"white\" }}\n                    /> */}\n                  </Card.Group>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Footer></Footer>\n    </Container>\n  );\n};\n\nexport default Kanban;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nconst Student = (props) => {\n  return (\n    <Card style={{ maxWidth: \"250px\", border: \"1px solid #193D62\" }}>\n      <Card.Content style={{ backgroundColor: \"#E6E6E6\" }}>\n        <Card.Header>{props.name}</Card.Header>\n        <Card.Meta style={{ textTransform: \"capitalize\" }}>\n          {props.designation}\n        </Card.Meta>\n        <Card.Description>\n          <div>\n            <b>Username:</b> {props.username} <br />\n            <b>Email </b>: {props.email} <br />\n            <b>Phone </b>: {props.phone} <br />\n            <b>Dept </b>: {props.department} <br />\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Student;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button, Card,\n  Container, Form, Grid, Header, Icon, Modal\n} from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport Student from \"./Student\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nconst Professors = (props) => {\n  const [allProfs, setAllProfs] = useState([]);\n\n  const getAllProfs = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/users/professors`);\n      const jsonData = await response.json();\n      setAllProfs(jsonData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getAllProfs();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [formState, setFormState] = useState({\n    formId: \"\",\n    formName: \"\",\n    formPassword: \"\",\n    formEmail: \"\",\n    formFName: \"\",\n    formLName: \"\",\n    formPhone: \"\",\n    formRole: \"Professor\",\n    formAuthToken: \"\",\n    formDepartment: \"\",\n  });\n  const submit = () => {\n    fetch(\"http://localhost:5001/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: formState.formName,\n        password: formState.formPassword,\n        email: formState.formEmail,\n        first_name: formState.formFName,\n        last_name: formState.formLName,\n        phone: formState.formPhone,\n        role: formState.formRole,\n        department: formState.formDepartment,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        getAllProfs();\n      });\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container fluid={true}>\n      <MenuHeader token={props.token} setToken={props.setToken} />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <VerticalNavigation />\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <div>\n              <Modal\n                closeIcon\n                open={open}\n                trigger={\n                  <Button\n                    style={{\n                      float: \"right\",\n                      marginTop: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: \"#193D62\",\n                      color: \"white\",\n                    }}\n                  >\n                    Add Professor\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header content=\"Add New Student\" />\n                <Modal.Content scrolling>\n                  <Form>\n                    <Form.Field>\n                      <label>Username</label>\n                      <input\n                        name=\"formName\"\n                        placeholder=\"Username\"\n                        value={formState.formName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Password</label>\n                      <input\n                        name=\"formPassword\"\n                        placeholder=\"Password\"\n                        value={formState.formPassword}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Email</label>\n                      <input\n                        name=\"formEmail\"\n                        placeholder=\"Email\"\n                        value={formState.formEmail}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>First Name</label>\n                      <input\n                        name=\"formFName\"\n                        placeholder=\"First Name\"\n                        value={formState.formFName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Last Name</label>\n                      <input\n                        name=\"formLName\"\n                        placeholder=\"Last Name\"\n                        value={formState.formLName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Phone</label>\n                      <input\n                        name=\"formPhone\"\n                        placeholder=\"Phone\"\n                        value={formState.formPhone}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Role</label>\n                      <input\n                        name=\"formRole\"\n                        placeholder=\"Role\"\n                        value={formState.formRole}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Department</label>\n                      <input\n                        name=\"formDepartment\"\n                        placeholder=\"Department\"\n                        value={formState.formDepartment}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button color=\"green\" onClick={submit}>\n                    <Icon name=\"checkmark\" /> Submit\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <div\n                style={{\n                  textAlign: \"center\",\n                  padding: \"10px\",\n                  marginTop: \"10px\",\n                  textAlign: \"center\",\n                  border: \"1px solid black\",\n                  marginLeft: \"10px\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <h2>Registered Professors</h2>\n              </div>\n              <div style={{ margin: \"10px\", marginBottom: \"70px\" }}>\n                <Card.Group>\n                  {allProfs.map((student) => (\n                    <Student\n                      key={student.user_id}\n                      name={student.first_name + \" \" + student.last_name}\n                      username={student.username}\n                      email={student.email}\n                      phone={student.phone}\n                      designation={student.role}\n                      department={student.department}\n                    />\n                  ))}\n                </Card.Group>\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Footer></Footer>\n    </Container>\n  );\n};\n\nexport default Professors;\n","import React from \"react\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport \"../css/App.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport RecentProjects from \"./RecentProjects\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nfunction Projects(props) {\n  return (\n    <Container fluid={true}>\n      <MenuHeader token={props.token} setToken={props.setToken} />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <VerticalNavigation />\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <RecentProjects />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Footer></Footer>\n    </Container>\n  );\n}\n\nexport default Projects;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button, Card,\n  Container, Form, Grid, Header, Icon, Modal\n} from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport Student from \"./Student\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nconst Students = (props) => {\n  const [allStudents, setAllStudents] = useState([]);\n\n  const getAllStudents = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/users/students`);\n      const jsonData = await response.json();\n      setAllStudents(jsonData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getAllStudents();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [formState, setFormState] = useState({\n    formId: \"\",\n    formName: \"\",\n    formPassword: \"\",\n    formEmail: \"\",\n    formFName: \"\",\n    formLName: \"\",\n    formPhone: \"\",\n    formRole: \"Student\",\n    formAuthToken: \"\",\n    formDepartment: \"\",\n  });\n  const submit = () => {\n    fetch(\"http://localhost:5001/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: formState.formName,\n        password: formState.formPassword,\n        email: formState.formEmail,\n        first_name: formState.formFName,\n        last_name: formState.formLName,\n        phone: formState.formPhone,\n        role: formState.formRole,\n        department: formState.formDepartment,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        getAllStudents();\n      });\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container fluid={true}>\n      <MenuHeader token={props.token} setToken={props.setToken} />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <VerticalNavigation />\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <div>\n              <Modal\n                closeIcon\n                open={open}\n                trigger={\n                  <Button\n                    style={{\n                      float: \"right\",\n                      marginTop: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: \"#193D62\",\n                      color: \"white\",\n                    }}\n                  >\n                    Add Student\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header content=\"Add New Student\" />\n                <Modal.Content scrolling>\n                  <Form>\n                    <Form.Field>\n                      <label>Username</label>\n                      <input\n                        name=\"formName\"\n                        placeholder=\"Username\"\n                        value={formState.formName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Password</label>\n                      <input\n                        name=\"formPassword\"\n                        placeholder=\"Password\"\n                        value={formState.formPassword}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Email</label>\n                      <input\n                        name=\"formEmail\"\n                        placeholder=\"Email\"\n                        value={formState.formEmail}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>First Name</label>\n                      <input\n                        name=\"formFName\"\n                        placeholder=\"First Name\"\n                        value={formState.formFName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Last Name</label>\n                      <input\n                        name=\"formLName\"\n                        placeholder=\"Last Name\"\n                        value={formState.formLName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Phone</label>\n                      <input\n                        name=\"formPhone\"\n                        placeholder=\"Phone\"\n                        value={formState.formPhone}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Role</label>\n                      <input\n                        name=\"formRole\"\n                        placeholder=\"Role\"\n                        value={formState.formRole}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Department</label>\n                      <input\n                        name=\"formDepartment\"\n                        placeholder=\"Department\"\n                        value={formState.formDepartment}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button color=\"green\" onClick={submit}>\n                    <Icon name=\"checkmark\" /> Submit\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <div\n                style={{\n                  textAlign: \"center\",\n                  padding: \"10px\",\n                  marginTop: \"10px\",\n                  textAlign: \"center\",\n                  border: \"1px solid black\",\n                  marginLeft: \"10px\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <h2>Registered Students</h2>\n              </div>\n              <div style={{ margin: \"10px\", marginBottom: \"70px\" }}>\n                <Card.Group>\n                  {allStudents.map((student) => (\n                    <Student\n                      key={student.user_id}\n                      name={student.first_name + \" \" + student.last_name}\n                      username={student.username}\n                      email={student.email}\n                      phone={student.phone}\n                      designation={student.role}\n                      department={student.department}\n                    />\n                  ))}\n                </Card.Group>\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Footer></Footer>\n    </Container>\n  );\n};\n\nexport default Students;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nconst User = (props) => {\n  return (\n    <Card style={{ maxWidth: \"250px\", border: \"1px solid #193D62\" }}>\n      <Card.Content style={{ backgroundColor: \"#E6E6E6\" }}>\n        <Card.Header>{props.name}</Card.Header>\n        <Card.Meta style={{ textTransform: \"capitalize\" }}>\n          {props.designation}\n        </Card.Meta>\n        <Card.Description>\n          <div>\n            <b>Username:</b> {props.username} <br />\n            <b>Email </b>: {props.email} <br />\n            <b>Phone </b>: {props.phone} <br />\n            <b>Dept </b>: {props.department} <br />\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default User;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Container,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Modal,\n} from \"semantic-ui-react\";\nimport { BASE_URL } from \"../const\";\nimport \"../css/App.css\";\nimport Footer from \"./Footer\";\nimport MenuHeader from \"./MenuHeader\";\nimport User from \"./User\";\nimport VerticalNavigation from \"./VerticalNavigation\";\n\nconst Users = (props) => {\n  const [allUsers, setAllUsers] = useState([]);\n\n  const getAllStudents = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/users`);\n      const jsonData = await response.json();\n      setAllUsers(jsonData);\n      console.log(jsonData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getAllStudents();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [formState, setFormState] = useState({\n    formName: \"\",\n    formPassword: \"\",\n    formEmail: \"\",\n    formFName: \"\",\n    formLName: \"\",\n    formPhone: \"\",\n    formRole: \"\",\n    formDepartment: \"\",\n  });\n  const submit = () => {\n    fetch(\"http://localhost:5001/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: formState.formName,\n        password: formState.formPassword,\n        email: formState.formEmail,\n        first_name: formState.formFName,\n        last_name: formState.formLName,\n        phone: formState.formPhone,\n        role: formState.formRole,\n        department: formState.formDepartment,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        getAllStudents();\n      });\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container fluid={true}>\n      <MenuHeader token={props.token} setToken={props.setToken} />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <VerticalNavigation />\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <div>\n              <Modal\n                closeIcon\n                open={open}\n                trigger={\n                  <Button\n                    style={{\n                      float: \"right\",\n                      marginTop: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: \"#193D62\",\n                      color: \"white\",\n                    }}\n                  >\n                    Add User\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header content=\"Add New Student\" />\n                <Modal.Content scrolling>\n                  <Form>\n                    <Form.Field>\n                      <label>Username</label>\n                      <input\n                        name=\"formName\"\n                        placeholder=\"Username\"\n                        value={formState.formName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Password</label>\n                      <input\n                        name=\"formPassword\"\n                        placeholder=\"Password\"\n                        value={formState.formPassword}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Email</label>\n                      <input\n                        name=\"formEmail\"\n                        placeholder=\"Email\"\n                        value={formState.formEmail}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>First Name</label>\n                      <input\n                        name=\"formFName\"\n                        placeholder=\"First Name\"\n                        value={formState.formFName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Last Name</label>\n                      <input\n                        name=\"formLName\"\n                        placeholder=\"Last Name\"\n                        value={formState.formLName}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Phone</label>\n                      <input\n                        name=\"formPhone\"\n                        placeholder=\"Phone\"\n                        value={formState.formPhone}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Role</label>\n                      <input\n                        name=\"formRole\"\n                        placeholder=\"Role\"\n                        value={formState.formRole}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Department</label>\n                      <input\n                        name=\"formDepartment\"\n                        placeholder=\"Department\"\n                        value={formState.formDepartment}\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button color=\"green\" onClick={submit}>\n                    <Icon name=\"checkmark\" /> Submit\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <div\n                style={{\n                  textAlign: \"center\",\n                  padding: \"10px\",\n                  marginTop: \"10px\",\n                  textAlign: \"center\",\n                  border: \"1px solid black\",\n                  padding: \"10px\",\n                  marginLeft: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <h2>All Users</h2>\n              </div>\n              <div style={{ margin: \"10px\", marginBottom: \"70px\" }}>\n                <Card.Group>\n                  {allUsers.map((student) => (\n                    <User\n                      key={student.user_id}\n                      name={student.first_name + \" \" + student.last_name}\n                      username={student.username}\n                      email={student.email}\n                      phone={student.phone}\n                      designation={student.role}\n                      department={student.department}\n                    />\n                  ))}\n                </Card.Group>\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Footer></Footer>\n    </Container>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport Kanban from \"./Kanban\";\nimport Profesors from \"./Professors\";\nimport Projects from \"./Projects\";\nimport Students from \"./Students\";\nimport Users from \"./Users\";\n\nconst Views = (props) => {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<Dashboard token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"dashboard\"\n        element={<Dashboard token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"students\"\n        element={<Students token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"professors\"\n        element={<Profesors token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"users\"\n        element={<Users token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"projects\"\n        element={<Projects token={props.token} setToken={props.setToken} />}\n      />\n      <Route\n        path=\"kanban/:id\"\n        element={<Kanban token={props.token} setToken={props.setToken} />}\n      />\n      {/* <Route path=\"login\" element={<Login setToken={setToken} />} /> */}\n    </Routes>\n  );\n};\n\nexport default Views;\n","import React from \"react\";\nimport \"../src/css/App.css\";\nimport Login from \"./components/Login\";\nimport Views from \"./components/Views\";\nimport useToken from \"./useToken\";\n\nfunction App() {\n  const { token, setToken } = useToken({});\n  if (token == undefined || (token != undefined && token.auth == true)) {\n    return <Login setToken={setToken} />;\n  }\n  return <Views token={token} setToken={setToken} />;\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem(\"token\");\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (userToken) => {\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token,\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}